{"mappings":";;;;;;;;;;ACAA;;;;AAKA,MAAM,mCAAa;IACjB,mBAAmB,CAAC,uBAAuB,CAAC;AAC9C;AAEA,MAAM,kCAAY;IAChB,aAAa;QACX,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IACA,QAAQ;QACN,WAAW;IACb;AACF;AACA,MAAM,8BAAQ,CAAA,GAAA,sBAAc,EAAE,kCAAY;AAC1C,MAAM,+BAAS,IAAI,CAAA,GAAA,aAAS,AAAD;IAE3B,2CAAe,CAAC,YAAE,SAAQ,EAAE,iBAC1B,gCAAC,CAAA,GAAA,eAAgB;QAAE,OAAO;qBACxB,gCAAC,CAAA,GAAA,mBAAW;QAAE,OAAO;OAClB;;ADzBP;AEAA;;IAGA,2CAAe,CAAC,YAAE,SAAQ,EAAE,iBAC1B,gCAAC,CAAA,GAAA,WAAG,uBACF,gCAAC,CAAA,GAAA,WAAI,AAAD;QAAE,MAAM;OACT;;;ACNP;;;;;IAMA,2CAAe,IAAM;IACnB,MAAM,GAAG,MAAM,GAAG,CAAA,GAAA,mBAAY,AAAD;IAC7B,qBACE,gCAAC,CAAA,GAAA,WAAG,uBACF,gCAAC,CAAA,GAAA,WAAG;QAAE,MAAM;qBACV,gCAAC,CAAA,GAAA,YAAI;QACH,YAAY,MAAM,MAAM,CAAC,QAAQ;QACjC,eAAe,MAAM,MAAM,CAAC,QAAQ;QACpC,SAAQ;QACR,gBAAe;qBAEf,gCAAC,CAAA,GAAA,iBAAS;QACR,MAAK;QACL,kBAAA,IAAgB;OACjB;AAOX;;;AC3BA;;;;;IAMA,2CAAe,CAAC,oBAAE,iBAAgB,EAAE,GAAK;IACvC,MAAM,GAAG,MAAM,GAAG,CAAA,GAAA,mBAAY,AAAD;IAC7B,qBACE,gCAAC,CAAA,GAAA,YAAK,AAAD;QACH,YAAY,MAAM,MAAM,CAAC,QAAQ;qBAEjC,gCAAC,CAAA,GAAA,kBAAU,uBACT,gCAAC,CAAA,GAAA,iBAAS;QAAE,MAAK;OAAI,aACpB,kCAAoB,gCAAC,cAAM;AAIpC;;;AClBA;;IAGA,2CAAe,CAAC,YAAE,SAAQ,eAAE,YAAW,EAAE,GAAK;IAC5C,MAAM,CAAC,KAAK,MAAM,GAAG,CAAA,GAAA,mBAAY,AAAD;IAChC,MAAM,SAAS,IAAI;QACjB,WAAW;QACX,aAAa;QACb,GAAI,eAAe;YACjB,aAAa;YACb,CAAC,MAAM,UAAU,CAAC,MAAM,CAAC,EAAE;gBACzB,aAAa;YACf;QACF,CAAC;IACH;IAEA,qBAAO,gCAAC;QAAG,WAAW;OAAS;AACjC;;;ACjBA;;IAGA,2CAAe,CAAA,sBAAS,gCAAC,CAAA,GAAA,iBAAS,GAAM;;;ACFxC;;AAYA,MAAM,mCAAa,CAAC,WAAE,QAAO,YAAE,SAAQ,EAAE,GAAG,MAAM,GAAK;IACrD,MAAM,MAAM;QACV,IAAI,CAAA,GAAA,qBAAa;QACjB,IAAI,CAAA,GAAA,oBAAY;QAChB,IAAI,CAAA,GAAA,mBAAW;QACf,IAAI,CAAA,GAAA,oBAAY;QAChB,IAAI,CAAA,GAAA,mBAAW;QACf,IAAI,CAAA,GAAA,oBAAY;QAChB,OAAO,CAAA,GAAA,sBAAc;QACrB,OAAO,CAAA,GAAA,qBAAa;IACtB;IAEA,MAAM,YAAY,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ;IAE9C,qBAAO,gCAAC,WAAc,MAAO;AAC/B;IAGA,2CAAe;;","sources":["index.js","components/ThemeProvider.js","components/Layout.js","components/Footer.js","components/Breadcrumbs.js","components/PlainList.js","components/Link.js","components/Typography.js"],"sourcesContent":["export { default as ThemeProvider } from './components/ThemeProvider';\nexport { default as Layout } from './components/Layout';\nexport { default as Footer } from './components/Footer';\nexport { default as Breadcrumbs } from './components/Breadcrumbs';\nexport { default as PlainList } from './components/PlainList';\nexport { default as Link } from './components/Link';\nexport { default as Typography } from './components/Typography';\n","import React from 'react';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, createDarkTheme } from 'baseui';\n\nconst primitives = {\n  primaryFontFamily: `\"IBM Plex Serif\", serif`,\n};\n\nconst overrides = {\n  breakpoints: {\n    small: 600,\n    medium: 900,\n    large: 1200,\n  },\n  colors: {\n    linkHover: 'orange !important',\n  }\n};\nconst theme = createDarkTheme(primitives, overrides);\nconst engine = new Styletron();\n\nexport default ({ children }) => (\n  <StyletronProvider value={engine}>\n    <BaseProvider theme={theme}>\n      {children}\n    </BaseProvider>\n  </StyletronProvider>\n);\n","import React from 'react';\nimport { Grid, Cell } from 'baseui/layout-grid';\n\nexport default ({ children }) => (\n  <Grid>\n    <Cell span={12}>\n      {children}\n    </Cell>\n  </Grid>\n);\n","import React from 'react';\nimport { useStyletron } from 'baseui';\nimport { Block } from 'baseui/block';\nimport { StyledLink } from \"baseui/link\";\nimport { Grid, Cell } from 'baseui/layout-grid';\n\nexport default () => {\n  const [, theme] = useStyletron();\n  return (\n    <Grid>\n      <Cell span={12}>\n        <Block\n          paddingTop={theme.sizing.scale800}\n          paddingBottom={theme.sizing.scale800}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <StyledLink\n            href=\"#top\"\n            animateUnderline\n          >\n            back to top\n          </StyledLink>\n        </Block>\n      </Cell>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { useStyletron } from 'baseui';\nimport { Block } from 'baseui/block';\nimport { Breadcrumbs } from \"baseui/breadcrumbs\";\nimport { StyledLink } from \"baseui/link\";\n\nexport default ({ currentPageLabel }) => {\n  const [, theme] = useStyletron();\n  return (\n    <Block\n      paddingTop={theme.sizing.scale500}\n    >\n      <Breadcrumbs>\n        <StyledLink href=\"/\">velox.cc</StyledLink>\n        {currentPageLabel && <span>{currentPageLabel}</span>}\n      </Breadcrumbs>\n    </Block>\n  );\n}\n","import React from 'react';\nimport { useStyletron } from 'baseui';\n\nexport default ({ children, autoColumns }) => {\n  const [css, theme] = useStyletron();\n  const styles = css({\n    listStyle: 'none',\n    paddingLeft: 0,\n    ...(autoColumns && {\n      columnCount: 2,\n      [theme.mediaQuery.medium]: {\n        columnCount: 4\n      }\n    })\n  });\n\n  return <ul className={styles}>{children}</ul>;\n};\n","import React from 'react';\nimport { StyledLink } from 'baseui/link';\n\nexport default props => <StyledLink {...props} />;\n","\nimport React from 'react';\nimport {\n  HeadingXXLarge,\n  HeadingXLarge,\n  HeadingLarge,\n  HeadingMedium,\n  HeadingSmall,\n  HeadingXSmall,\n  ParagraphMedium,\n  ParagraphSmall,\n} from 'baseui/typography';\n\nconst Typography = ({ variant, children, ...rest }) => {\n  const map = {\n    h1: HeadingXXLarge,\n    h2: HeadingXLarge,\n    h3: HeadingLarge,\n    h4: HeadingMedium,\n    h5: HeadingSmall,\n    h6: HeadingXSmall,\n    body1: ParagraphMedium,\n    body2: ParagraphSmall,\n  }\n\n  const Component = map[variant] || map['body1'];\n\n  return <Component {...rest}>{children}</Component>;\n};\n\n\nexport default Typography;\n"],"names":[],"version":3,"file":"module.js.map"}